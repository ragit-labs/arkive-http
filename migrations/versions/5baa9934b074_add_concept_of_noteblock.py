"""Add concept of NoteBlock

Revision ID: 5baa9934b074
Revises: 1d6f61e7488f
Create Date: 2024-04-14 06:22:45.245958

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5baa9934b074'
down_revision: Union[str, None] = '1d6f61e7488f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('note_block',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('note_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('block_type', sa.String(), nullable=False),
    sa.Column('extra_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('note', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('note', 'folder_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_column('note', 'note')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('note', sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True))
    op.alter_column('note', 'folder_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('note', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_table('note_block')
    # ### end Alembic commands ###
