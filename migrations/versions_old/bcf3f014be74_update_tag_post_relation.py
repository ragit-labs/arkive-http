"""Update tag post relation

Revision ID: bcf3f014be74
Revises: b6d07cded726
Create Date: 2024-04-09 00:05:40.334431

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "bcf3f014be74"
down_revision: Union[str, None] = "b6d07cded726"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "tag", "id", existing_type=sa.UUID(), type_=sa.String(), existing_nullable=False
    )
    op.drop_constraint("tag_name_unique", "tag", type_="unique")
    op.create_unique_constraint(None, "tag", ["id"])
    op.drop_column("tag", "extra_metadata")
    op.drop_column("tag", "name")
    op.alter_column(
        "tag_post",
        "tag_id",
        existing_type=sa.UUID(),
        type_=sa.String(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "tag_post",
        "tag_id",
        existing_type=sa.String(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.add_column(
        "tag", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "tag",
        sa.Column(
            "extra_metadata",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(None, "tag", type_="unique")
    op.create_unique_constraint("tag_name_unique", "tag", ["name"])
    op.alter_column(
        "tag", "id", existing_type=sa.String(), type_=sa.UUID(), existing_nullable=False
    )
    # ### end Alembic commands ###
